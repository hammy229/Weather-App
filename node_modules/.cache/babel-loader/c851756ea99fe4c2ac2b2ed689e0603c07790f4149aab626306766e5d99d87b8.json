{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doshi\\\\Weather App\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState('');\n  const [error, setError] = useState('');\n\n  // Fetch weather based on user's location when the app loads\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        getWeatherByLocation(lat, lon);\n      });\n    }\n  }, []);\n\n  // Function to get weather by location (latitude and longitude)\n  const getWeatherByLocation = async (lat, lon) => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_API_KEY;\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n      const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n      const weatherResponse = await axios.get(weatherUrl);\n      const forecastResponse = await axios.get(forecastUrl);\n      setWeather(weatherResponse.data);\n\n      // Filter the forecast to show only one prediction per day (around midday)\n      const filteredForecast = forecastResponse.data.list.filter(entry => entry.dt_txt.includes('12:00:00'));\n      setForecast(filteredForecast);\n    } catch (err) {\n      setError('Unable to retrieve weather data.');\n      setWeather(null);\n      setForecast([]);\n    }\n  };\n\n  // Function to get weather by city name\n  const getWeather = async () => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_API_KEY;\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n      const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n      const weatherResponse = await axios.get(weatherUrl);\n      const forecastResponse = await axios.get(forecastUrl);\n      setWeather(weatherResponse.data);\n\n      // Filter the forecast to show only one prediction per day (around midday)\n      const filteredForecast = forecastResponse.data.list.filter(entry => entry.dt_txt.includes('12:00:00'));\n      setForecast(filteredForecast);\n    } catch (err) {\n      setError('City not found. Please try again.');\n      setWeather(null);\n      setForecast([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Weather Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getWeather,\n        className: \"search-button\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"city-name\",\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temperature\",\n        children: [Math.round(weather.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-description\",\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n        alt: weather.weather[0].description,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weather.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", weather.wind.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast\",\n        children: forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-day\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(day.dt_txt).toLocaleDateString(undefined, {\n              weekday: 'long'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: day.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n            alt: day.weather[0].description,\n            className: \"forecast-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W3kbVgsrmJISOsBtNAfOLfa37Dk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","weather","setWeather","forecast","setForecast","city","setCity","error","setError","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","getWeatherByLocation","apiKey","process","env","REACT_APP_API_KEY","weatherUrl","forecastUrl","weatherResponse","get","forecastResponse","data","filteredForecast","list","filter","entry","dt_txt","includes","err","getWeather","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","name","Math","round","main","temp","description","src","icon","alt","humidity","wind","speed","length","map","day","index","Date","toLocaleDateString","undefined","weekday","_c","$RefreshReg$"],"sources":["C:/Users/doshi/Weather App/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [city, setCity] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch weather based on user's location when the app loads\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        const lat = position.coords.latitude;\r\n        const lon = position.coords.longitude;\r\n        getWeatherByLocation(lat, lon);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Function to get weather by location (latitude and longitude)\r\n  const getWeatherByLocation = async (lat, lon) => {\r\n    try {\r\n      setError('');\r\n      const apiKey = process.env.REACT_APP_API_KEY;\r\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n      const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n\r\n      const weatherResponse = await axios.get(weatherUrl);\r\n      const forecastResponse = await axios.get(forecastUrl);\r\n\r\n      setWeather(weatherResponse.data);\r\n\r\n      // Filter the forecast to show only one prediction per day (around midday)\r\n      const filteredForecast = forecastResponse.data.list.filter((entry) =>\r\n        entry.dt_txt.includes('12:00:00')\r\n      );\r\n      setForecast(filteredForecast);\r\n    } catch (err) {\r\n      setError('Unable to retrieve weather data.');\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n  };\r\n\r\n  // Function to get weather by city name\r\n  const getWeather = async () => {\r\n    try {\r\n      setError('');\r\n      const apiKey = process.env.REACT_APP_API_KEY;\r\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n      const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\r\n\r\n      const weatherResponse = await axios.get(weatherUrl);\r\n      const forecastResponse = await axios.get(forecastUrl);\r\n\r\n      setWeather(weatherResponse.data);\r\n\r\n      // Filter the forecast to show only one prediction per day (around midday)\r\n      const filteredForecast = forecastResponse.data.list.filter((entry) =>\r\n        entry.dt_txt.includes('12:00:00')\r\n      );\r\n      setForecast(filteredForecast);\r\n    } catch (err) {\r\n      setError('City not found. Please try again.');\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"search-container\">\r\n        <h1 className=\"title\">Weather Finder</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          placeholder=\"Enter city\"\r\n          className=\"search-input\"\r\n        />\r\n        <button onClick={getWeather} className=\"search-button\">Get Weather</button>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n\r\n      {weather && (\r\n        <div className=\"weather-container\">\r\n          <h2 className=\"city-name\">{weather.name}</h2>\r\n          <p className=\"temperature\">{Math.round(weather.main.temp)}°C</p>\r\n          <p className=\"weather-description\">{weather.weather[0].description}</p>\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n            alt={weather.weather[0].description}\r\n            className=\"weather-icon\"\r\n          />\r\n          <div className=\"weather-details\">\r\n            <p>Humidity: {weather.main.humidity}%</p>\r\n            <p>Wind Speed: {weather.wind.speed} m/s</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {forecast.length > 0 && (\r\n        <div className=\"forecast-container\">\r\n          <h3>5-Day Forecast</h3>\r\n          <div className=\"forecast\">\r\n            {forecast.map((day, index) => (\r\n              <div key={index} className=\"forecast-day\">\r\n                <p>{new Date(day.dt_txt).toLocaleDateString(undefined, { weekday: 'long' })}</p>\r\n                <p>{Math.round(day.main.temp)}°C</p>\r\n                <p>{day.weather[0].description}</p>\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                  alt={day.weather[0].description}\r\n                  className=\"forecast-icon\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}